$date
	Mon Dec  2 21:33:19 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder4btb $end
$scope module uut $end
$var wire 4 ! A [3:0] $end
$var wire 4 " B [3:0] $end
$var wire 4 # sum4 [3:0] $end
$var wire 3 $ ctem [2:0] $end
$var wire 1 % Cout $end
$scope module bit1 $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 ( cin $end
$var wire 1 ) cout $end
$var wire 1 * sum $end
$upscope $end
$scope module bit2 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - cin $end
$var wire 1 . cout $end
$var wire 1 / sum $end
$upscope $end
$scope module bit3 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 cin $end
$var wire 1 3 cout $end
$var wire 1 4 sum $end
$upscope $end
$scope module bit4 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 % cout $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
b0 $
b0 #
b0 "
b0 !
$end
#1
b10 #
1/
1-
b1 $
1)
1'
1&
b1 "
b1 !
#2
0/
b100 #
14
0-
12
0)
b10 $
1.
0'
1,
0&
1+
b10 "
b10 !
#3
b110 #
1/
1-
b11 $
1)
1'
1&
b11 "
b11 !
#4
04
0/
02
b1000 #
18
0-
0.
17
0)
b100 $
13
0'
0,
11
0&
0+
10
b100 "
b100 !
#5
b1010 #
1/
1-
b101 $
1)
1'
1&
b101 "
b101 !
#6
0/
b1100 #
14
0-
12
0)
b110 $
1.
0'
1,
0&
1+
b110 "
b110 !
#7
b1110 #
1/
1-
b111 $
1)
1'
1&
b111 "
b111 !
#8
04
08
b0 #
0/
02
07
0-
0.
03
b0 $
0)
1%
0'
0,
01
16
0&
0+
00
15
b1000 "
b1000 !
#9
b10 #
1/
1-
b1 $
1)
1'
1&
b1001 "
b1001 !
#10
0/
b100 #
14
0-
12
0)
b10 $
1.
0'
1,
0&
1+
b1010 "
b1010 !
#11
b110 #
1/
1-
b11 $
1)
1'
1&
b1011 "
b1011 !
#12
04
0/
02
b1000 #
18
0-
0.
17
0)
b100 $
13
0'
0,
11
0&
0+
10
b1100 "
b1100 !
#13
b1010 #
1/
1-
b101 $
1)
1'
1&
b1101 "
b1101 !
#14
0/
b1100 #
14
0-
12
0)
b110 $
1.
0'
1,
0&
1+
b1110 "
b1110 !
#15
b1110 #
1/
1-
b111 $
1)
1'
1&
b1111 "
b1111 !
#20
